#!/usr/bin/env ruby -W0

# "-W0" is against Fastimage's "warning: already initialized constant URI::DEFAULT_PARSER" on Ruby 2.0 and 2.1
#       that ruins binstub tests

Signal.trap :INT do
  abort "\n(interrupted by SIGINT)"
end




# TODO: use OptionParser?
debug = json = github = nil
loop do
  case ARGV.first
  when "--debug"
    debug = ARGV.shift
  when "--json"
    json = ARGV.shift
  when "--github"
    github = ARGV.shift
  else
    break
  end
end
if github
  require "tmpdir"
  require "nethttputils"
  begin
    dir = Dir.mktmpdir "directlink"
    src = File.join dir, "directlink.rb"
    puts "downloaded directlink.rb from GitHub (#{
      File.write src, NetHTTPUtils.request_data("https://github.com/nakilon/directlink/blob/master/lib/directlink.rb", form: {raw: true})
    } bytes)"
    require_relative src
  ensure
    # puts "deleting #{dir}"
    # require "fileutils"
    # FileUtils.rm_rf dir
  end
else
  require "directlink"
end
DirectLink.silent = !debug
abort "usage: directlink [--debug] [--json] <link1> <link2> <link3> ..." if [nil, "-h", "--help"].include? ARGV.first

begin
  if json
    require "json"
    t = ARGV.map do |link|
      t = DirectLink link
      t.is_a?(Array) ? t.map(&:to_h) : t.to_h
    end
    puts JSON.pretty_generate t.size == 1 ? t.first : t
  else
    ARGV.each do |link|
      t = DirectLink link
      puts "<= #{link}"
      (t.is_a?(Array) ? t : [t]).each{ |s| puts "=> #{s.url}\n   #{s.type} #{s.width}x#{s.height}" }
    end
  end
rescue NetHTTPUtils::Error,
       FastImage::UnknownImageType,
       FastImage::ImageFetchFailure,
       DirectLink::ErrorMissingEnvVar,
       # DirectLink::ErrorAssert,
       DirectLink::ErrorNotFound,
       DirectLink::ErrorBadLink => e
  puts e.backtrace if debug
  c = e.class.to_s
  abort c == e.to_s ? c : "#{c}: #{e}"
end
